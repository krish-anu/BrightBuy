name: CI/CD - Build, Push, Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_BASE: yourdockeruser/brightbuy

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # BACKEND: install & test
      - name: Setup Node (backend)
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install backend deps
        run: |
          cd backend
          npm ci
      - name: Run backend tests
        run: |
          cd backend
          npm test

      # FRONTEND: install & build
      - name: Setup Node (frontend)
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install frontend deps & build
        run: |
          cd frontend
          npm ci
          npm run build

  build-and-push-images:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_BASE }}-backend:${{ github.sha }}
            ${{ env.IMAGE_BASE }}-backend:latest

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_BASE }}-frontend:${{ github.sha }}
            ${{ env.IMAGE_BASE }}-frontend:latest

  deploy:
    needs: build-and-push-images
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v0.1.11
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e
            # log in to docker on server (if private images)
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

            # Pull the images by commit SHA if available; fallback to latest
            BACKEND_SHA=${{ github.sha }}
            FRONTEND_SHA=${{ github.sha }}
            docker pull ${{ env.IMAGE_BASE }}-backend:$BACKEND_SHA || docker pull ${{ env.IMAGE_BASE }}-backend:latest
            docker pull ${{ env.IMAGE_BASE }}-frontend:$FRONTEND_SHA || docker pull ${{ env.IMAGE_BASE }}-frontend:latest

            # Retag to latest so docker-compose which references :latest will get new image
            docker tag ${{ env.IMAGE_BASE }}-backend:$BACKEND_SHA ${{ env.IMAGE_BASE }}-backend:latest || true
            docker tag ${{ env.IMAGE_BASE }}-frontend:$FRONTEND_SHA ${{ env.IMAGE_BASE }}-frontend:latest || true

            cd /home/brightbuy
            docker-compose -f docker-compose.prod.yml pull
            docker-compose -f docker-compose.prod.yml up -d --remove-orphans
