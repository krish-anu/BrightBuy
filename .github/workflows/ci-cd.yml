name: CI/CD - Build, Push, Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_BASE: anusan2003/brightbuy

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # BACKEND: install & test
      - name: Setup Node (backend)
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install backend deps
        run: |
          cd backend
          npm ci
      - name: Run backend tests
        run: |
          cd backend
          npm test

      # FRONTEND: install & build
      - name: Setup Node (frontend)
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install frontend deps & build
        run: |
          cd frontend
          npm ci
          npm run build

  build-and-push-images:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Docker Hub secrets
        run: |
          if [ -z "${{ secrets.DOCKER_USERNAME }}" ] || [ -z "${{ secrets.DOCKER_PASSWORD }}" ]; then
            echo "ERROR: Missing required secrets DOCKER_USERNAME and/or DOCKER_PASSWORD.";
            exit 1;
          fi

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_BASE }}-backend:${{ github.sha }}
            ${{ env.IMAGE_BASE }}-backend:latest

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_BASE }}-frontend:${{ github.sha }}
            ${{ env.IMAGE_BASE }}-frontend:latest

  deploy:
    needs: build-and-push-images
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate deploy secrets
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          BACKEND_ENV: ${{ secrets.BACKEND_ENV }}
        run: |
          missing=0
          for v in SERVER_HOST SERVER_USER SERVER_SSH_KEY DOCKER_USERNAME DOCKER_PASSWORD; do
            if [ -z "${!v}" ]; then echo "Missing secret: $v"; missing=1; fi
          done
          if [ "$missing" -eq 1 ]; then
            echo "‚ùå One or more required secrets are missing."; exit 1; fi

      - name: Prepare deployment bundle
        run: |
          set -e
          mkdir -p deploy_bundle/backend
          cp docker-compose.prod.yml deploy_bundle/
          cp seed.sql deploy_bundle/
          # write backend .env from secret if it exists
          if [ -n "${{ secrets.BACKEND_ENV }}" ]; then
            printf "%s\n" "${{ secrets.BACKEND_ENV }}" > deploy_bundle/backend/.env
          fi

      - name: Upload deployment bundle to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "deploy_bundle/*"
          target: "~/brightbuy"

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          timeout: '90s'
          debug: true
          script: |
            set -e
            export PATH=$PATH:/usr/bin

            PROJECT_DIR="$HOME/brightbuy"
            mkdir -p "$PROJECT_DIR/backend"
            cd "$PROJECT_DIR"

            # Ensure backend/.env exists
            if [ ! -f backend/.env ]; then
              echo "‚ùå Missing backend/.env! Please set BACKEND_ENV secret."
              exit 1
            fi

            # Docker login
            echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

            # Pull and retag images
            BACKEND_SHA=${GITHUB_SHA}
            FRONTEND_SHA=${GITHUB_SHA}
            docker pull ${IMAGE_BASE}-backend:$BACKEND_SHA || docker pull ${IMAGE_BASE}-backend:latest
            docker pull ${IMAGE_BASE}-frontend:$FRONTEND_SHA || docker pull ${IMAGE_BASE}-frontend:latest
            docker tag ${IMAGE_BASE}-backend:$BACKEND_SHA ${IMAGE_BASE}-backend:latest || true
            docker tag ${IMAGE_BASE}-frontend:$FRONTEND_SHA ${IMAGE_BASE}-frontend:latest || true

            # Deploy with docker-compose
            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml up -d --remove-orphans

            echo "üöÄ Deployment completed successfully on $(hostname)"
